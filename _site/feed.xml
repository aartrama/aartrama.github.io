<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2018-06-09T13:42:35-04:00</updated><id>http://localhost:4000/</id><title type="html">Journey of a Bioinformatician</title><subtitle>Aarthi Ramakrishnan's blog</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="http://localhost:4000/jekyll/update/2018/06/08/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2018-06-08T01:05:27-04:00</published><updated>2018-06-08T01:05:27-04:00</updated><id>http://localhost:4000/jekyll/update/2018/06/08/welcome-to-jekyll</id><content type="html" xml:base="http://localhost:4000/jekyll/update/2018/06/08/welcome-to-jekyll.html">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">stringsAsFactors trouble in R</title><link href="http://localhost:4000/2018/06/02/stringsasfactors-trouble-in-r.html" rel="alternate" type="text/html" title="stringsAsFactors trouble in R" /><published>2018-06-02T12:55:00-04:00</published><updated>2018-06-02T12:55:00-04:00</updated><id>http://localhost:4000/2018/06/02/stringsasfactors-trouble-in-r</id><content type="html" xml:base="http://localhost:4000/2018/06/02/stringsasfactors-trouble-in-r.html">&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Recently, I was reading a counts matrix into R -&lt;/span&gt;&lt;br /&gt;&lt;!-- HTML generated using hilite.me --&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;counts &lt;span style=&quot;color: #333333;&quot;&gt;&amp;lt;-&lt;/span&gt; read.table(&lt;span style=&quot;background-color: #fff0f0;&quot;&gt;&quot;htseq_counts_matrix.txt&quot;&lt;/span&gt;)&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;head(counts)&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                   Pool5_RNAseq_12_S33_L006 Pool5_RNAseq_19_S34_L006&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000001                     4676                     2314&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000003                        0                        0&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000028                      558                      172&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000031                    25272                     6334&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000037                       28                      118&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000049                        3                        0&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                   Pool5_RNAseq_4_S29_L006 Pool5_RNAseq_5_S30_L006&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000001                    3422                    4300&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000003                       0                       0&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000028                     328                     581&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000031                    7878                   22343&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000037                     212                      21&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000049                       2                       3&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                   Pool5_RNAseq_6_S31_L006 Pool5_RNAseq_7_S32_L006&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000001                    2221                     857&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000003                       0                       0&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000028                     158                     159&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000031                   27124                    3655&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000037                       5                      32&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000049                       0                       0&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;I required the counts for 2 gene IDs only. The 2 IDs were stored in a separate file called 'some_genes.txt'.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;!-- HTML generated using hilite.me --&gt; &lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes &lt;span style=&quot;color: #333333;&quot;&gt;&amp;lt;-&lt;/span&gt; read.table(&lt;span style=&quot;background-color: #fff0f0;&quot;&gt;&quot;some_genes.txt&quot;&lt;/span&gt;)&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes &lt;span style=&quot;color: #333333;&quot;&gt;&amp;lt;-&lt;/span&gt; some_genes&lt;span style=&quot;color: #333333;&quot;&gt;$&lt;/span&gt;V1&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;[1] ENSMUSG00000043587 ENSMUSG00000040276&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Levels: ENSMUSG00000040276 ENSMUSG00000043587&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;The 2 IDs were ENSMUSG00000043587 and ENSMUSG00000040276. When I tried to subset the counts matrix to retain the counts of just these IDs, something unexpected happened.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;!-- HTML generated using hilite.me --&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes_counts &lt;span style=&quot;color: #333333;&quot;&gt;&amp;lt;-&lt;/span&gt; counts[some_genes, ]&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes_counts&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                   Pool5_RNAseq_12_S33_L006 Pool5_RNAseq_19_S34_L006&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000003                        0                        0&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000001                     4676                     2314&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                   Pool5_RNAseq_4_S29_L006 Pool5_RNAseq_5_S30_L006&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000003                       0                       0&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000001                    3422                    4300&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                   Pool5_RNAseq_6_S31_L006 Pool5_RNAseq_7_S32_L006&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000003                       0                       0&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000000001                    2221                     857&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt; &lt;span style=&quot;font-family: inherit;&quot;&gt;Instead of obtaining the counts for the 2 IDs, I obtained the counts of 2 totally random genes! When I investigated further -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;!-- HTML generated using hilite.me --&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;typeof(some_genes)&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;[1] &quot;integer&quot;&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;The variables in 'some_genes' were being converted to integers, and the integers were being used as the row index to subset the counts matrix. This is totally undesirable! But once I included 'stringsAsFactors = F' while reading the file into R, the problem was fixed.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;!-- HTML generated using hilite.me --&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes &lt;span style=&quot;color: #333333;&quot;&gt;&amp;lt;-&lt;/span&gt; read.table(&lt;span style=&quot;background-color: #fff0f0;&quot;&gt;&quot;some_genes.txt&quot;&lt;/span&gt;, stringsAsFactors &lt;span style=&quot;color: #333333;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #008800; font-weight: bold;&quot;&gt;F&lt;/span&gt;)&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes &lt;span style=&quot;color: #333333;&quot;&gt;&amp;lt;-&lt;/span&gt; some_genes&lt;span style=&quot;color: #333333;&quot;&gt;$&lt;/span&gt;V1&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;[1] &quot;ENSMUSG00000043587&quot; &quot;ENSMUSG00000040276&quot;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes_counts &lt;span style=&quot;color: #333333;&quot;&gt;&amp;lt;-&lt;/span&gt; counts[some_genes, ]&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;some_genes_counts&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                   Pool5_RNAseq_12_S33_L006 Pool5_RNAseq_19_S34_L006&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000043587                      385                      510&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000040276                        5                      942&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                   Pool5_RNAseq_4_S29_L006 Pool5_RNAseq_5_S30_L006&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000043587                     836                     365&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000040276                    1021                       4&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                   Pool5_RNAseq_6_S31_L006 Pool5_RNAseq_7_S32_L006&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000043587                      44                     229&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;ENSMUSG00000040276                      12                     515&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;typeof(some_genes)&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;[1] &quot;character&quot;&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;This time, I obtained the counts of the right set of IDs. R by default sets stringsAsFactors = T because this setting is convenient while running models using the glm() or lm() function.&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;An alternative to including stringsAsFactors = F for every file you read into R is to just set -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;!-- HTML generated using hilite.me --&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;options(stringsAsFactors &lt;span style=&quot;color: #333333;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #008800; font-weight: bold;&quot;&gt;FALSE&lt;/span&gt;)&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;at the beginning of the R script&lt;br /&gt;&lt;br /&gt;The following article was also very helpful in getting a better understanding of this problem:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://simplystatistics.org/2015/07/24/stringsasfactors-an-unauthorized-biography/&quot;&gt;https://simplystatistics.org/2015/07/24/stringsasfactors-an-unauthorized-biography/&lt;/a&gt;&lt;/div&gt;</content><author><name>Aarthi Ramakrishnan</name></author><summary type="html">Recently, I was reading a counts matrix into R -&amp;gt; counts &amp;lt;- read.table(&quot;htseq_counts_matrix.txt&quot;)&amp;gt; head(counts) Pool5_RNAseq_12_S33_L006 Pool5_RNAseq_19_S34_L006ENSMUSG00000000001 4676 2314ENSMUSG00000000003 0 0ENSMUSG00000000028 558 172ENSMUSG00000000031 25272 6334ENSMUSG00000000037 28 118ENSMUSG00000000049 3 0 Pool5_RNAseq_4_S29_L006 Pool5_RNAseq_5_S30_L006ENSMUSG00000000001 3422 4300ENSMUSG00000000003 0 0ENSMUSG00000000028 328 581ENSMUSG00000000031 7878 22343ENSMUSG00000000037 212 21ENSMUSG00000000049 2 3 Pool5_RNAseq_6_S31_L006 Pool5_RNAseq_7_S32_L006ENSMUSG00000000001 2221 857ENSMUSG00000000003 0 0ENSMUSG00000000028 158 159ENSMUSG00000000031 27124 3655ENSMUSG00000000037 5 32ENSMUSG00000000049 0 0I required the counts for 2 gene IDs only. The 2 IDs were stored in a separate file called 'some_genes.txt'. &amp;gt; some_genes &amp;lt;- read.table(&quot;some_genes.txt&quot;)&amp;gt; some_genes &amp;lt;- some_genes$V1&amp;gt; some_genes[1] ENSMUSG00000043587 ENSMUSG00000040276Levels: ENSMUSG00000040276 ENSMUSG00000043587The 2 IDs were ENSMUSG00000043587 and ENSMUSG00000040276. When I tried to subset the counts matrix to retain the counts of just these IDs, something unexpected happened.&amp;gt; some_genes_counts &amp;lt;- counts[some_genes, ]&amp;gt; some_genes_counts Pool5_RNAseq_12_S33_L006 Pool5_RNAseq_19_S34_L006ENSMUSG00000000003 0 0ENSMUSG00000000001 4676 2314 Pool5_RNAseq_4_S29_L006 Pool5_RNAseq_5_S30_L006ENSMUSG00000000003 0 0ENSMUSG00000000001 3422 4300 Pool5_RNAseq_6_S31_L006 Pool5_RNAseq_7_S32_L006ENSMUSG00000000003 0 0ENSMUSG00000000001 2221 857 Instead of obtaining the counts for the 2 IDs, I obtained the counts of 2 totally random genes! When I investigated further -&amp;gt; typeof(some_genes)[1] &quot;integer&quot;The variables in 'some_genes' were being converted to integers, and the integers were being used as the row index to subset the counts matrix. This is totally undesirable! But once I included 'stringsAsFactors = F' while reading the file into R, the problem was fixed.&amp;nbsp;&amp;gt; some_genes &amp;lt;- read.table(&quot;some_genes.txt&quot;, stringsAsFactors = F)&amp;gt; some_genes &amp;lt;- some_genes$V1&amp;gt; some_genes[1] &quot;ENSMUSG00000043587&quot; &quot;ENSMUSG00000040276&quot;&amp;gt; some_genes_counts &amp;lt;- counts[some_genes, ]&amp;gt; some_genes_counts Pool5_RNAseq_12_S33_L006 Pool5_RNAseq_19_S34_L006ENSMUSG00000043587 385 510ENSMUSG00000040276 5 942 Pool5_RNAseq_4_S29_L006 Pool5_RNAseq_5_S30_L006ENSMUSG00000043587 836 365ENSMUSG00000040276 1021 4 Pool5_RNAseq_6_S31_L006 Pool5_RNAseq_7_S32_L006ENSMUSG00000043587 44 229ENSMUSG00000040276 12 515&amp;gt; typeof(some_genes)[1] &quot;character&quot;This time, I obtained the counts of the right set of IDs. R by default sets stringsAsFactors = T because this setting is convenient while running models using the glm() or lm() function.&amp;nbsp;An alternative to including stringsAsFactors = F for every file you read into R is to just set -&amp;gt; options(stringsAsFactors = FALSE)at the beginning of the R scriptThe following article was also very helpful in getting a better understanding of this problem:https://simplystatistics.org/2015/07/24/stringsasfactors-an-unauthorized-biography/</summary></entry><entry><title type="html">Difference between Input and IgG samples for ChIP-seq data</title><link href="http://localhost:4000/2018/05/30/difference-between-input-and-igg.html" rel="alternate" type="text/html" title="Difference between Input and IgG samples for ChIP-seq data" /><published>2018-05-30T12:41:00-04:00</published><updated>2018-05-30T12:41:00-04:00</updated><id>http://localhost:4000/2018/05/30/difference-between-input-and-igg</id><content type="html" xml:base="http://localhost:4000/2018/05/30/difference-between-input-and-igg.html">&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;Although a little outdated, this article explains the difference between using Input and IgG as a control for ChIP-seq analysis well:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://epigenie.com/guide-getting-started-with-chip-seq/&quot;&gt;https://epigenie.com/guide-getting-started-with-chip-seq/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The following biostars links are useful too:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://www.biostars.org/p/15817/&quot;&gt;https://www.biostars.org/p/15817/&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://www.biostars.org/p/215222/&quot; target=&quot;_blank&quot;&gt;https://www.biostars.org/p/215222/&amp;nbsp;&lt;/a&gt;&lt;br /&gt;&lt;a href=&quot;https://www.biostars.org/p/300621/&quot; target=&quot;_blank&quot;&gt;https://www.biostars.org/p/300621/ &lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Input samples are generally preferred over IgG, as they work best while using MACS for peak calling.&lt;/div&gt;</content><author><name>Aarthi Ramakrishnan</name></author><summary type="html">Although a little outdated, this article explains the difference between using Input and IgG as a control for ChIP-seq analysis well:https://epigenie.com/guide-getting-started-with-chip-seq/The following biostars links are useful too:https://www.biostars.org/p/15817/https://www.biostars.org/p/215222/&amp;nbsp;https://www.biostars.org/p/300621/ Input samples are generally preferred over IgG, as they work best while using MACS for peak calling.</summary></entry><entry><title type="html">Deploying Bioconductor Shiny apps</title><link href="http://localhost:4000/2018/05/13/deploying-shiny-apps-using-bioconductor.html" rel="alternate" type="text/html" title="Deploying Bioconductor Shiny apps" /><published>2018-05-13T15:44:00-04:00</published><updated>2018-05-13T15:44:00-04:00</updated><id>http://localhost:4000/2018/05/13/deploying-shiny-apps-using-bioconductor</id><content type="html" xml:base="http://localhost:4000/2018/05/13/deploying-shiny-apps-using-bioconductor.html">&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;When I was first trying to deploy my R shiny app (which uses bioconductor packages) on shinyapps.io, I received the foll&lt;span style=&quot;font-family: inherit;&quot;&gt;owing error:&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;!-- HTML generated using hilite.me --&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;rsconnect&lt;span style=&quot;color: #333333;&quot;&gt;::&lt;/span&gt;deployApp()&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Preparing to deploy application...DONE&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Uploading bundle for application: 342263...DONE&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Deploying bundle: 1371638 for application: 342263 ...&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Waiting for task: 525534110&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;  error: Parsing manifest&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;################################ Begin Task Log ################################&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;################################# End Task Log #################################&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Error: Unhandled Exception: Child Task 525534111 failed: Error parsing manifest: Unable to determine package source for Bioconductor package BiocGenerics: Repository must be specified&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;In order to get rid of this error, one must make sure that the bioconductor repository is configured properly -&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;getOption(&lt;span style=&quot;background-color: #fff0f0;&quot;&gt;&quot;repos&quot;&lt;/span&gt;)&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                       CRAN&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;&quot;https://cran.rstudio.com/&quot;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;attr(,&quot;RStudio&quot;)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;[1] TRUE&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;options(repos &lt;span style=&quot;color: #333333;&quot;&gt;=&lt;/span&gt; BiocInstaller&lt;span style=&quot;color: #333333;&quot;&gt;::&lt;/span&gt;biocinstallRepos())&lt;br /&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;getOption(&lt;span style=&quot;background-color: #fff0f0;&quot;&gt;&quot;repos&quot;&lt;/span&gt;)&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                                               BioCsoft&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;           &quot;https://bioconductor.org/packages/3.6/bioc&quot;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                                                BioCann&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;&quot;https://bioconductor.org/packages/3.6/data/annotation&quot;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                                                BioCexp&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;&quot;https://bioconductor.org/packages/3.6/data/experiment&quot;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                                                   CRAN&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;                            &quot;https://cran.rstudio.com/&quot;&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;Once the repository was added, I tried deploying my app again -&lt;br /&gt;&lt;br /&gt;&lt;!-- HTML generated using hilite.me --&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #c65d09; font-weight: bold;&quot;&gt;&amp;gt; &lt;/span&gt;deployApp()&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Preparing to deploy application...&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Update application currently deployed at&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;https://aartrama.shinyapps.io/genenames-to-geneids/? [Y/n] Y&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;DONE&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Uploading bundle for application: 342263...DONE&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Deploying bundle: 1371644 for application: 342263 ...&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;Waiting for task: 525534413&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;  building: Building image: 1384537&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;  building: Fetching packages&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;  building: Installing packages&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;  building: Installing files&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;color: #888888;&quot;&gt;  building: Pushing image: 1384537&lt;/span&gt;&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;This time, I did not receive any errors.&lt;br /&gt;&lt;br /&gt;Source:&amp;nbsp;&lt;a href=&quot;https://groups.google.com/forum/#!topic/shinyapps-users/zaUay_lM-lY&quot;&gt;https://groups.google.com/forum/#!topic/shinyapps-users/zaUay_lM-lY&lt;/a&gt;&lt;/div&gt;</content><author><name>Aarthi Ramakrishnan</name></author><summary type="html">When I was first trying to deploy my R shiny app (which uses bioconductor packages) on shinyapps.io, I received the following error:&amp;gt; rsconnect::deployApp()Preparing to deploy application...DONEUploading bundle for application: 342263...DONEDeploying bundle: 1371638 for application: 342263 ...Waiting for task: 525534110 error: Parsing manifest################################ Begin Task Log ################################################################# End Task Log #################################Error: Unhandled Exception: Child Task 525534111 failed: Error parsing manifest: Unable to determine package source for Bioconductor package BiocGenerics: Repository must be specifiedIn order to get rid of this error, one must make sure that the bioconductor repository is configured properly -&amp;gt; getOption(&quot;repos&quot;) CRAN&quot;https://cran.rstudio.com/&quot;attr(,&quot;RStudio&quot;)[1] TRUE&amp;gt; options(repos = BiocInstaller::biocinstallRepos())&amp;gt; getOption(&quot;repos&quot;) BioCsoft &quot;https://bioconductor.org/packages/3.6/bioc&quot; BioCann&quot;https://bioconductor.org/packages/3.6/data/annotation&quot; BioCexp&quot;https://bioconductor.org/packages/3.6/data/experiment&quot; CRAN &quot;https://cran.rstudio.com/&quot;Once the repository was added, I tried deploying my app again -&amp;gt; deployApp()Preparing to deploy application...Update application currently deployed athttps://aartrama.shinyapps.io/genenames-to-geneids/? [Y/n] YDONEUploading bundle for application: 342263...DONEDeploying bundle: 1371644 for application: 342263 ...Waiting for task: 525534413 building: Building image: 1384537 building: Fetching packages building: Installing packages building: Installing files building: Pushing image: 1384537This time, I did not receive any errors.Source:&amp;nbsp;https://groups.google.com/forum/#!topic/shinyapps-users/zaUay_lM-lY</summary></entry><entry><title type="html">Gene Set Enrichment Analysis</title><link href="http://localhost:4000/2018/03/29/gene-set-enrichment-analysis.html" rel="alternate" type="text/html" title="Gene Set Enrichment Analysis" /><published>2018-03-29T22:55:00-04:00</published><updated>2018-03-29T22:55:00-04:00</updated><id>http://localhost:4000/2018/03/29/gene-set-enrichment-analysis</id><content type="html" xml:base="http://localhost:4000/2018/03/29/gene-set-enrichment-analysis.html">&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;Gene set enrichment analysis is an improved version of functional enrichment analysis. This analysis considers the ranking of genes, whereas a traditional functional enrichment analysis does not. Following is the background of the analysis using an RNA-seq gene list as an example:&lt;br /&gt;&lt;br /&gt;The following explanation is based on the paper '&lt;a href=&quot;http://ieeexplore.ieee.org/document/7152849/&quot; target=&quot;_blank&quot;&gt;REPA: Applying Pathway Analysis to Genome-wide Transcription Factor Binding Data&lt;/a&gt;'&lt;br /&gt;&lt;br /&gt;1) Gene set enrichment analysis typically requires a gene list where genes are ranked by the most significantly upregulated, to the most significantly downregulated. This is done by multiplying the sign of fold change with the negative log(p value).&lt;br /&gt;&lt;br /&gt;&lt;b&gt;RNA-seq gene list:&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;gene1&amp;nbsp;&amp;nbsp;&amp;nbsp; rank1&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;- most significantly upregulated&lt;br /&gt;gene2&amp;nbsp;&amp;nbsp;&amp;nbsp; rank2&lt;br /&gt;gene3&amp;nbsp;&amp;nbsp;&amp;nbsp; rank3&lt;br /&gt;gene4&amp;nbsp;&amp;nbsp;&amp;nbsp; rank4&lt;br /&gt;gene5&amp;nbsp;&amp;nbsp;&amp;nbsp; rank5&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;- most significantly downregulated&lt;br /&gt;&lt;br /&gt;2) HPO (Human Phenotype Ontology) is an example of a gene set collection. HPO has a total of approximately 7,000 gene sets; each gene set containing a large number of genes. These gene sets are converted to GMT format text files to facilitate extraction of gene names in each gene set.&lt;br /&gt;&lt;br /&gt;3)&amp;nbsp; Genes in each gene set are compared with our list of RNA-seq genes.&lt;br /&gt;&lt;br /&gt;4) The ranks of common genes are compared to equal number of random genes which have been assigned random ranks. Therefore, we have the following: &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;List of genes common b/w RNA-seq gene list and HPO gene set:&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;gene1&amp;nbsp;&amp;nbsp;&amp;nbsp; rank1&lt;br /&gt;gene3&amp;nbsp;&amp;nbsp;&amp;nbsp; rank3&lt;br /&gt;gene5&amp;nbsp;&amp;nbsp;&amp;nbsp; rank5&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Random genes&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;randomgene1&amp;nbsp;&amp;nbsp;&amp;nbsp; rank2&lt;br /&gt;randomgene2&amp;nbsp;&amp;nbsp;&amp;nbsp; rank3&lt;br /&gt;randomgene3&amp;nbsp;&amp;nbsp;&amp;nbsp; rank5&lt;br /&gt;&lt;br /&gt;The ranks of the genes are compared using 'Mann-Whitney U Test' (Fisher's exact test?). Upon comparison, a p-value is obtained.&lt;br /&gt;&lt;br /&gt;5) After we obtain p-values upon comparison of the RNA-seq gene list with each gene set, corrected p-values are calculated as follows:&lt;br /&gt;&lt;br /&gt;Corrected P-value&lt;br /&gt;&lt;br /&gt;= max ( 1- &lt;u&gt;#sign.test&amp;nbsp;&lt;/u&gt;&amp;nbsp; &amp;nbsp;,&amp;nbsp;&amp;nbsp;&lt;u&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;)&lt;/u&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#total.tests&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #total.tests&lt;u&gt;&lt;/u&gt;&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</content><author><name>Aarthi Ramakrishnan</name></author><summary type="html">Gene set enrichment analysis is an improved version of functional enrichment analysis. This analysis considers the ranking of genes, whereas a traditional functional enrichment analysis does not. Following is the background of the analysis using an RNA-seq gene list as an example:The following explanation is based on the paper 'REPA: Applying Pathway Analysis to Genome-wide Transcription Factor Binding Data'1) Gene set enrichment analysis typically requires a gene list where genes are ranked by the most significantly upregulated, to the most significantly downregulated. This is done by multiplying the sign of fold change with the negative log(p value).RNA-seq gene list:gene1&amp;nbsp;&amp;nbsp;&amp;nbsp; rank1&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;- most significantly upregulatedgene2&amp;nbsp;&amp;nbsp;&amp;nbsp; rank2gene3&amp;nbsp;&amp;nbsp;&amp;nbsp; rank3gene4&amp;nbsp;&amp;nbsp;&amp;nbsp; rank4gene5&amp;nbsp;&amp;nbsp;&amp;nbsp; rank5&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;lt;- most significantly downregulated2) HPO (Human Phenotype Ontology) is an example of a gene set collection. HPO has a total of approximately 7,000 gene sets; each gene set containing a large number of genes. These gene sets are converted to GMT format text files to facilitate extraction of gene names in each gene set.3)&amp;nbsp; Genes in each gene set are compared with our list of RNA-seq genes.4) The ranks of common genes are compared to equal number of random genes which have been assigned random ranks. Therefore, we have the following: List of genes common b/w RNA-seq gene list and HPO gene set:gene1&amp;nbsp;&amp;nbsp;&amp;nbsp; rank1gene3&amp;nbsp;&amp;nbsp;&amp;nbsp; rank3gene5&amp;nbsp;&amp;nbsp;&amp;nbsp; rank5Random genesrandomgene1&amp;nbsp;&amp;nbsp;&amp;nbsp; rank2randomgene2&amp;nbsp;&amp;nbsp;&amp;nbsp; rank3randomgene3&amp;nbsp;&amp;nbsp;&amp;nbsp; rank5The ranks of the genes are compared using 'Mann-Whitney U Test' (Fisher's exact test?). Upon comparison, a p-value is obtained.5) After we obtain p-values upon comparison of the RNA-seq gene list with each gene set, corrected p-values are calculated as follows:Corrected P-value= max ( 1- #sign.test&amp;nbsp;&amp;nbsp; &amp;nbsp;,&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;)&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;#total.tests&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; #total.tests</summary></entry><entry><title type="html">Setting up ssh keys</title><link href="http://localhost:4000/2018/01/17/remember-servers-password-on-local.html" rel="alternate" type="text/html" title="Setting up ssh keys" /><published>2018-01-17T10:54:00-05:00</published><updated>2018-01-17T10:54:00-05:00</updated><id>http://localhost:4000/2018/01/17/remember-servers-password-on-local</id><content type="html" xml:base="http://localhost:4000/2018/01/17/remember-servers-password-on-local.html">&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;It is annoying to have to enter the password of a server each time you  try to log in. You can set up ssh keys to avoid this:&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Step 1.&lt;/b&gt; On your local machine, type the following:&lt;br /&gt;&lt;!-- HTML generated using hilite.me --&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;ssh-keygen -t rsa&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;When prompted for the filename to save the key in, hit enter. This will save the rsa key pair to a default file 'id_rsa'. When prompted for the password, hit enter (to leave it blank). Hit enter again to repeat the password.&lt;br /&gt;&lt;br /&gt;The above step should be done&lt;b&gt; only once&lt;/b&gt; on your local machine.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Step 2.&lt;/b&gt; Once the key's image is generated, type the following:&lt;br /&gt;&lt;!-- HTML generated using hilite.me --&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;ssh-copy-id username@server&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;For example, in my case it was&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;ssh-copy-id ramaka02@minerva.hpc.mssm.edu&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;Type the password for the server one last time, and you're all set! Next time, you will not be prompted for a password.&lt;br /&gt;&lt;br /&gt;* To set up ssh key for another server, start from Step 2.&lt;/div&gt;</content><author><name>Aarthi Ramakrishnan</name></author><summary type="html">It is annoying to have to enter the password of a server each time you try to log in. You can set up ssh keys to avoid this:Step 1. On your local machine, type the following:ssh-keygen -t rsaWhen prompted for the filename to save the key in, hit enter. This will save the rsa key pair to a default file 'id_rsa'. When prompted for the password, hit enter (to leave it blank). Hit enter again to repeat the password.The above step should be done only once on your local machine.Step 2. Once the key's image is generated, type the following:ssh-copy-id username@serverFor example, in my case it wasssh-copy-id ramaka02@minerva.hpc.mssm.eduType the password for the server one last time, and you're all set! Next time, you will not be prompted for a password.* To set up ssh key for another server, start from Step 2.</summary></entry><entry><title type="html">CIGAR string and SAM format</title><link href="http://localhost:4000/2018/01/09/cigar-string.html" rel="alternate" type="text/html" title="CIGAR string and SAM format" /><published>2018-01-09T08:37:00-05:00</published><updated>2018-01-09T08:37:00-05:00</updated><id>http://localhost:4000/2018/01/09/cigar-string</id><content type="html" xml:base="http://localhost:4000/2018/01/09/cigar-string.html">&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;A reminder on what a CIGAR string stands for in a SAM file:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://genome.sph.umich.edu/wiki/SAM#What_is_a_CIGAR.3F&quot; target=&quot;_blank&quot;&gt;https://genome.sph.umich.edu/wiki/SAM#What_is_a_CIGAR.3F&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Reminder of SAM format file fields:&lt;br /&gt;&lt;br /&gt;&lt;a href=&quot;https://samtools.github.io/hts-specs/SAMv1.pdf#subsection.1.4&quot;&gt;https://samtools.github.io/hts-specs/SAMv1.pdf#subsection.1.4&lt;/a&gt;&lt;/div&gt;</content><author><name>Aarthi Ramakrishnan</name></author><summary type="html">A reminder on what a CIGAR string stands for in a SAM file:https://genome.sph.umich.edu/wiki/SAM#What_is_a_CIGAR.3FReminder of SAM format file fields:https://samtools.github.io/hts-specs/SAMv1.pdf#subsection.1.4</summary></entry><entry><title type="html">Vectorization</title><link href="http://localhost:4000/2017/12/27/vectorization.html" rel="alternate" type="text/html" title="Vectorization" /><published>2017-12-27T02:32:00-05:00</published><updated>2017-12-27T02:32:00-05:00</updated><id>http://localhost:4000/2017/12/27/vectorization</id><content type="html" xml:base="http://localhost:4000/2017/12/27/vectorization.html">&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;In any programming language, vectorization is a much more efficient way of dealing with numbers over writing a for loop. Following is an example in python&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;x &lt;span style=&quot;color: #333333;&quot;&gt;=&lt;/span&gt; [&lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;3&lt;/span&gt;]&lt;br /&gt;y &lt;span style=&quot;color: #333333;&quot;&gt;=&lt;/span&gt; [&lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;4&lt;/span&gt;, &lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;5&lt;/span&gt;, &lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;6&lt;/span&gt;]&lt;br /&gt;&lt;br /&gt;&lt;span style=&quot;color: #008800; font-weight: bold;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #0066bb; font-weight: bold;&quot;&gt;sum_of_product&lt;/span&gt;(x, y):&lt;br /&gt;    summation &lt;span style=&quot;color: #333333;&quot;&gt;=&lt;/span&gt; &lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;0&lt;/span&gt;&lt;br /&gt;    &lt;span style=&quot;color: #008800; font-weight: bold;&quot;&gt;for&lt;/span&gt; i &lt;span style=&quot;color: black; font-weight: bold;&quot;&gt;in&lt;/span&gt; &lt;span style=&quot;color: #007020;&quot;&gt;range&lt;/span&gt;(&lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;0&lt;/span&gt;, &lt;span style=&quot;color: #007020;&quot;&gt;len&lt;/span&gt;(x)):&lt;br /&gt;        summation &lt;span style=&quot;color: #333333;&quot;&gt;+=&lt;/span&gt; x[i] &lt;span style=&quot;color: #333333;&quot;&gt;*&lt;/span&gt; y[i]&lt;br /&gt;    &lt;span style=&quot;color: #008800; font-weight: bold;&quot;&gt;return&lt;/span&gt; summation&lt;br /&gt;&lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;The above for loop implementation can be done much more efficiently as follows using numpy:&lt;br /&gt;&lt;br /&gt;&lt;div style=&quot;background: #ffffff; border-width: 0.1em 0.1em 0.1em 0.8em; border: solid gray; overflow: auto; padding: 0.2em 0.6em; width: auto;&quot;&gt;&lt;pre style=&quot;line-height: 125%; margin: 0;&quot;&gt;&lt;span style=&quot;color: #008800; font-weight: bold;&quot;&gt;import&lt;/span&gt; &lt;span style=&quot;color: #0e84b5; font-weight: bold;&quot;&gt;numpy&lt;/span&gt; &lt;span style=&quot;color: #008800; font-weight: bold;&quot;&gt;as&lt;/span&gt; &lt;span style=&quot;color: #0e84b5; font-weight: bold;&quot;&gt;np&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre style=&quot;line-height: 16.25px;&quot;&gt;x &lt;span style=&quot;color: #333333;&quot;&gt;=&lt;/span&gt; [&lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;1&lt;/span&gt;, &lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;2&lt;/span&gt;, &lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;3&lt;/span&gt;]&lt;br /&gt;y &lt;span style=&quot;color: #333333;&quot;&gt;=&lt;/span&gt; [&lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;4&lt;/span&gt;, &lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;5&lt;/span&gt;, &lt;span style=&quot;color: #0000dd; font-weight: bold;&quot;&gt;6&lt;/span&gt;]&lt;/pre&gt;&lt;span style=&quot;color: #008800; font-weight: bold;&quot;&gt;def&lt;/span&gt; &lt;span style=&quot;color: #0066bb; font-weight: bold;&quot;&gt;sum_of_product&lt;/span&gt;(x, y):     &lt;span style=&quot;color: #008800; font-weight: bold;&quot;&gt;return&lt;/span&gt; np.matmul(x,y) &lt;/pre&gt;&lt;/div&gt;&lt;br /&gt;This way, the code is efficient as well as concise.&lt;/div&gt;</content><author><name>Aarthi Ramakrishnan</name></author><summary type="html">In any programming language, vectorization is a much more efficient way of dealing with numbers over writing a for loop. Following is an example in pythonx = [1, 2, 3]y = [4, 5, 6]def sum_of_product(x, y): summation = 0 for i in range(0, len(x)): summation += x[i] * y[i] return summationThe above for loop implementation can be done much more efficiently as follows using numpy:import numpy as npx = [1, 2, 3]y = [4, 5, 6]def sum_of_product(x, y): return np.matmul(x,y) This way, the code is efficient as well as concise.</summary></entry><entry><title type="html">RRHO (Rank Rank Hypergeometric Overlap)</title><link href="http://localhost:4000/2017/12/24/rrho-rank-rank-hypergeometric-overlap.html" rel="alternate" type="text/html" title="RRHO (Rank Rank Hypergeometric Overlap)" /><published>2017-12-24T04:45:00-05:00</published><updated>2017-12-24T04:45:00-05:00</updated><id>http://localhost:4000/2017/12/24/rrho-rank-rank-hypergeometric-overlap</id><content type="html" xml:base="http://localhost:4000/2017/12/24/rrho-rank-rank-hypergeometric-overlap.html">&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;RRHO is used to find the overlap between two gene lists. To generate an RRHO, every gene in each gene list should have a log fold change and a p-value associated to it. This test does not consider a fold change or a p-value cutoff. Rather, it uses ALL the genes in the gene lists.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;b&gt;Steps to generate RRHO -&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;1) The first step is to identify the common genes between the 2 gene lists. If the first gene list has 300 genes, and second gene list has 290 genes, 289 genes remain in gene list 1 and 289 genes remain in gene list 2 (assuming 289 genes are common b/w the two lists).&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;2) Next, genes in each gene list are ranked based on the signed negative log of p-value. 'Signed' here refers to assigning a '+' or a '-' sign to the - log (p-value), depending on whether the gene is up or down-regulated.&amp;nbsp;&lt;/span&gt;The genes at the top of the list would have the most significantly up-regulated genes, and the genes at the bottom would have the most significantly down-regulated genes.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;u&gt;Gene list 1&amp;nbsp;&lt;/u&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene8&amp;nbsp; &amp;nbsp; &amp;nbsp; rank1&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;- most significantly up-regulated&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene53&amp;nbsp; &amp;nbsp; rank2&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene6&amp;nbsp; &amp;nbsp; &amp;nbsp; rank3&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene1&amp;nbsp; &amp;nbsp; &amp;nbsp; rank4&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene5&amp;nbsp; &amp;nbsp; &amp;nbsp; rank5&amp;nbsp; &amp;nbsp; &amp;lt;- most significantly down-regulated&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;u&gt;Gene list 2&lt;/u&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene5&amp;nbsp; &amp;nbsp; &amp;nbsp; rank1&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene10&amp;nbsp; &amp;nbsp; rank2&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene31&amp;nbsp; &amp;nbsp; rank3&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene94&amp;nbsp; &amp;nbsp; rank4&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;gene8&amp;nbsp; &amp;nbsp; &amp;nbsp; rank5&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;georgia&amp;quot; , &amp;quot;times new roman&amp;quot; , serif;&quot;&gt;3)&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;The ranks are then used to generate a scatter plot and to compute spearman correlation between the 2 gene lists. This is done to know whether there is a positive or a negative correlation between the 2 gene lists.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;4) A step size is calculated. Step size depends upon the length of each gene list. We can consider the square root of 289, which is 17, as the step size.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;5) Considering the top 17 genes in gene list 1 and top 17 genes in gene list 2, a hypergeometric test is carried out to find the significance of overlap. Next, top 17 genes from gene list 1 and top 34 genes in gene list 2 are considered, and hypergeometric test is used to find the significance. This step is carried out until we are through all 289 genes, and obtain 289 p-value measurements.&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;georgia&amp;quot; , &amp;quot;times new roman&amp;quot; , serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;u&gt;Gene list 1&lt;/u&gt;&amp;nbsp; &amp;nbsp; &lt;u&gt;Gene list 2&lt;/u&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; p-value&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 51 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; &amp;nbsp; ...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;..&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 51 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp; &amp;nbsp; ...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;..&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;289 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; 289 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;We use this list of p-values to fill the RRHO matrix, starting from the bottom left corner. We should also apply a bonferroni correction to the p-values in the RRHO matrix.&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;georgia&amp;quot; , &amp;quot;times new roman&amp;quot; , serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: &amp;quot;georgia&amp;quot; , &amp;quot;times new roman&amp;quot; , serif;&quot;&gt;6) In the end, we obtain a 17x17 matrix for -log(p-values). This matrix is typically represented as a heat map; the color scale ranging from red (for most significant) to blue (least significant).&amp;nbsp;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: &amp;quot;georgia&amp;quot; , &amp;quot;times new roman&amp;quot; , serif;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;http://3.bp.blogspot.com/-j1Nb27flnxU/WxMH5ThAWqI/AAAAAAAABDE/teIe9UySA943fY3lIGC1wKy0G0J5BOXKgCK4BGAYYCw/s1600/12964_2015_96_Fig6_HTML.gif&quot; imageanchor=&quot;1&quot; style=&quot;clear: left; float: left; margin-bottom: 1em; margin-right: 1em;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;img border=&quot;0&quot; height=&quot;185&quot; src=&quot;https://3.bp.blogspot.com/-j1Nb27flnxU/WxMH5ThAWqI/AAAAAAAABDE/teIe9UySA943fY3lIGC1wKy0G0J5BOXKgCK4BGAYYCw/s200/12964_2015_96_Fig6_HTML.gif&quot; width=&quot;200&quot; /&gt;&lt;/span&gt;&lt;/a&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;color: #999999; font-size: x-small;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;/span&gt;&lt;br /&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: #999999; font-family: inherit; font-size: x-small;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;span style=&quot;color: #999999; font-family: inherit; font-size: x-small;&quot;&gt;&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;color: #999999; font-family: inherit; font-size: x-small;&quot;&gt;https://openi.nlm.nih.gov/detailedresult.phpimg=PMC4396151_12964_2015_96_Fig6_HTML&amp;amp;req=4&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;This RRHO has a red signal in the bottom left quadrant, which represents the presence of significantly co up-regulated genes. Red denotes high significance, and blue denotes poor significance of overlap.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;br /&gt;&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;The 4 quadrants of the RRHO map represent the following -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;table style=&quot;border-collapse: collapse; border-spacing: 0px; border: 1px solid black; color: black; text-align: center;&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;c0 r0&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border: 1px solid black; padding: 8px;&quot;&gt;&lt;div style=&quot;outline: none;&quot;&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&amp;nbsp;Up in list1,&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;outline: none;&quot;&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;down in list2&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;c1 r0&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border: 1px solid black; padding: 8px;&quot;&gt;&lt;div style=&quot;outline: none;&quot;&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Co&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;outline: none;&quot;&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;down-&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;regulated&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td class=&quot;c0 r1&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border: 1px solid black; padding: 8px;&quot;&gt;&lt;div style=&quot;outline: none;&quot;&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Co&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;outline: none;&quot;&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;up-&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;regulated&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;td class=&quot;c1 r1&quot; colspan=&quot;1&quot; rowspan=&quot;1&quot; style=&quot;border: 1px solid black; padding: 8px;&quot;&gt;&lt;div style=&quot;outline: none;&quot;&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Up in list2,&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;outline: none;&quot;&gt;&lt;div style=&quot;margin: 0px;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Down in list1&lt;/span&gt;&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style=&quot;text-align: left;&quot;&gt;Reference:&amp;nbsp;&lt;a href=&quot;https://academic.oup.com/nar/article/38/17/e169/1033168&quot; style=&quot;text-align: left;&quot;&gt;https://academic.oup.com/nar/article/38/17/e169/1033168&lt;/a&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;div style=&quot;text-align: left;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Caveat: The RRHO cannot represent negative correlations, i.e., if the spearman correlation is negative, the RRHO map would appear blue.&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style=&quot;text-align: center;&quot;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Aarthi Ramakrishnan</name></author><summary type="html">RRHO is used to find the overlap between two gene lists. To generate an RRHO, every gene in each gene list should have a log fold change and a p-value associated to it. This test does not consider a fold change or a p-value cutoff. Rather, it uses ALL the genes in the gene lists.Steps to generate RRHO -1) The first step is to identify the common genes between the 2 gene lists. If the first gene list has 300 genes, and second gene list has 290 genes, 289 genes remain in gene list 1 and 289 genes remain in gene list 2 (assuming 289 genes are common b/w the two lists).2) Next, genes in each gene list are ranked based on the signed negative log of p-value. 'Signed' here refers to assigning a '+' or a '-' sign to the - log (p-value), depending on whether the gene is up or down-regulated.&amp;nbsp;The genes at the top of the list would have the most significantly up-regulated genes, and the genes at the bottom would have the most significantly down-regulated genes.Gene list 1&amp;nbsp;gene8&amp;nbsp; &amp;nbsp; &amp;nbsp; rank1&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;lt;- most significantly up-regulatedgene53&amp;nbsp; &amp;nbsp; rank2gene6&amp;nbsp; &amp;nbsp; &amp;nbsp; rank3gene1&amp;nbsp; &amp;nbsp; &amp;nbsp; rank4gene5&amp;nbsp; &amp;nbsp; &amp;nbsp; rank5&amp;nbsp; &amp;nbsp; &amp;lt;- most significantly down-regulated&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.Gene list 2gene5&amp;nbsp; &amp;nbsp; &amp;nbsp; rank1gene10&amp;nbsp; &amp;nbsp; rank2gene31&amp;nbsp; &amp;nbsp; rank3gene94&amp;nbsp; &amp;nbsp; rank4gene8&amp;nbsp; &amp;nbsp; &amp;nbsp; rank5&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.&amp;nbsp; &amp;nbsp; .&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;.3)&amp;nbsp;The ranks are then used to generate a scatter plot and to compute spearman correlation between the 2 gene lists. This is done to know whether there is a positive or a negative correlation between the 2 gene lists.4) A step size is calculated. Step size depends upon the length of each gene list. We can consider the square root of 289, which is 17, as the step size.5) Considering the top 17 genes in gene list 1 and top 17 genes in gene list 2, a hypergeometric test is carried out to find the significance of overlap. Next, top 17 genes from gene list 1 and top 34 genes in gene list 2 are considered, and hypergeometric test is used to find the significance. This step is carried out until we are through all 289 genes, and obtain 289 p-value measurements.Gene list 1&amp;nbsp; &amp;nbsp; Gene list 2&amp;nbsp; &amp;nbsp; &amp;nbsp; p-value17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 51 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..&amp;nbsp; &amp;nbsp; ...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;..34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 17 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..34 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 51 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..&amp;nbsp; &amp;nbsp; ...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;...&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;..289 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; 289 genes&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; ..We use this list of p-values to fill the RRHO matrix, starting from the bottom left corner. We should also apply a bonferroni correction to the p-values in the RRHO matrix.&amp;nbsp;6) In the end, we obtain a 17x17 matrix for -log(p-values). This matrix is typically represented as a heat map; the color scale ranging from red (for most significant) to blue (least significant).&amp;nbsp;&amp;nbsp;https://openi.nlm.nih.gov/detailedresult.phpimg=PMC4396151_12964_2015_96_Fig6_HTML&amp;amp;req=4This RRHO has a red signal in the bottom left quadrant, which represents the presence of significantly co up-regulated genes. Red denotes high significance, and blue denotes poor significance of overlap.The 4 quadrants of the RRHO map represent the following -&amp;nbsp;Up in list1,&amp;nbsp;down in list2Codown-regulatedCoup-regulatedUp in list2,&amp;nbsp;Down in list1Reference:&amp;nbsp;https://academic.oup.com/nar/article/38/17/e169/1033168Caveat: The RRHO cannot represent negative correlations, i.e., if the spearman correlation is negative, the RRHO map would appear blue.</summary></entry><entry><title type="html">Bioinformatics tools (biology and statistics description)</title><link href="http://localhost:4000/2017/12/24/bioinformatics-tools-biology-and.html" rel="alternate" type="text/html" title="Bioinformatics tools (biology and statistics description)" /><published>2017-12-24T03:50:00-05:00</published><updated>2017-12-24T03:50:00-05:00</updated><id>http://localhost:4000/2017/12/24/bioinformatics-tools-biology-and</id><content type="html" xml:base="http://localhost:4000/2017/12/24/bioinformatics-tools-biology-and.html">&lt;div dir=&quot;ltr&quot; style=&quot;text-align: left;&quot; trbidi=&quot;on&quot;&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Tools for quality control and adapter trimming -&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;FastQC - Checking the quality of raw reads, requires little memory,&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;cutadapt - Trimming the adapter sequences, supports wider range of sequencing platforms compared to fastx toolkit&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Fastx toolkit - Checking read quality, trimming adapter sequences&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;RNA-Seqc - RNA-SeQC is used after FASTQC, which allows users to investigate the yield, alignment and duplication rate, GC bias, rRNA contamination rate, exon vs intron region vs intragenic alignment, 3’5’ bias, coverage, computationally intensive&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;ngsplot - Finding overall coverage of raw RNA-seq reads from transcription start site to transcription end site&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;TrimGalore - wrapper of cutadapt and fastqc&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Tools for alignment -&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Bowtie - Aligner, not splice aware&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Bowtie2 - Aligner, not splice aware&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Tophat - Aligner, splice aware, successor of bowtie (wraps around bowtie), splice detection&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Tophat2 - Aligner, splice aware&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;HISAT (Hierarchical indexing for spliced alignment of Transcripts) - A fast aligner, splice aware, specific to RNA, does NOT do soft clipping&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;HISAT2 - A fast aligner, splice aware, specific to RNA, Soft clipping done&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;STAR (Spliced Transcripts Alignment to a Reference) - A fast aligner (similar to HISAT), splice aware&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;BWA (Burrow wheeler aligner) - DNA aligner&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Trinity - De novo transcriptome assembly&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;BSMAP - tolerate conversion of c to t in bisulfite sequencing&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Bismark - tolerate conversion of c to t in bisulfite sequencing&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Cufflinks - denovo transcriptome assembly&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Misc -&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;SAMtools - conversion of sam to bam, bam to sorted bam, removal of duplicate reads&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Bedtools - bedintersect,&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Cuffmerge&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;picard - removal of duplicate reads, merging sam files&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;diffRepeats - quantify repeat element enrichment / differential analysis of repeat elements in the DNA, algning short reads to a database of repeat sequences&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;diffReps - differential enrichment of a histone mark/transcription factor&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;mirdeep - de novo prediction of miRNA from RNA-seq data&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;ngsplot - can accept large files, runs with small memory footprints&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;phantompeek -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;chippeekanno -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;region_analysis -&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;GeneOverlap - used to find the overlap between 2 sets of genes&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Identification of splicing events -&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;rMATS - exon skipping, intron retention&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;MISO - Mixture of isoforms, intron retention, skipped exon, mutually exclusive and alternative 3' UTR, splicing ratio b/w isoforms of same gene, splicing ratio between same isoform from 2 different conditions, uses bayesian theorem to iteratively infer splicing ratio. Allows to infer splicing ratios, both among isoforms of the same gene and between 2 conditions for the same isoform. Helps to identify contribution of histone/tf in regulation of AS.&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Peak calling -&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;DANPOS&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;MACS&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Homer&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Quantification of aligned reads -&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Cufflinks - Transcriptome abundance, de-novo transcriptome assembly, based on maximum likelihood principle, groups transcripts with the same transcription start site&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;StringTie - Transcriptome abundance, exon level quantification&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Sailfish - no need of aligner, direct quantification&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Differential expression analysis -&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Cuffdiff - following cufflinks, generates high false positives&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Cuffdiff2 - generates high false positives&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;edgeR - Based on bayesian methods, negative binomial testing&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;DEseq - Based on bayesian methods, local regression, generates high false negatives (highly conservative output)&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Limma -&amp;nbsp;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Voom - models the mean variance relationship on log transformed read counts&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;htseq count&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Differential chip-seq analysis -&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;diffReps - to compare differential enrichment of a histone mark/transcription factor b/w 2 conditions, takes into account biological variations between a group of samples&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Remove batch effects from RNA-seq datasets -&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;ComBat&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;BatchQC&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;b&gt;Bioinformatics databases -&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;repbase - documents repetitive DNA sequences across eukaryotic species&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;miRbase -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;piRNAbank -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;lncRNAdb-&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;snornabase -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;SILVA -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;Rfam -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;NONCODE -&lt;/span&gt;&lt;br /&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span style=&quot;font-family: inherit;&quot;&gt;fRNAdb -&lt;/span&gt;&lt;/div&gt;</content><author><name>Aarthi Ramakrishnan</name></author><summary type="html">Tools for quality control and adapter trimming -&amp;nbsp;FastQC - Checking the quality of raw reads, requires little memory,cutadapt - Trimming the adapter sequences, supports wider range of sequencing platforms compared to fastx toolkitFastx toolkit - Checking read quality, trimming adapter sequencesRNA-Seqc - RNA-SeQC is used after FASTQC, which allows users to investigate the yield, alignment and duplication rate, GC bias, rRNA contamination rate, exon vs intron region vs intragenic alignment, 3’5’ bias, coverage, computationally intensivengsplot - Finding overall coverage of raw RNA-seq reads from transcription start site to transcription end siteTrimGalore - wrapper of cutadapt and fastqcTools for alignment -&amp;nbsp;Bowtie - Aligner, not splice awareBowtie2 - Aligner, not splice awareTophat - Aligner, splice aware, successor of bowtie (wraps around bowtie), splice detectionTophat2 - Aligner, splice awareHISAT (Hierarchical indexing for spliced alignment of Transcripts) - A fast aligner, splice aware, specific to RNA, does NOT do soft clippingHISAT2 - A fast aligner, splice aware, specific to RNA, Soft clipping doneSTAR (Spliced Transcripts Alignment to a Reference) - A fast aligner (similar to HISAT), splice awareBWA (Burrow wheeler aligner) - DNA alignerTrinity - De novo transcriptome assemblyBSMAP - tolerate conversion of c to t in bisulfite sequencingBismark - tolerate conversion of c to t in bisulfite sequencingCufflinks - denovo transcriptome assemblyMisc -SAMtools - conversion of sam to bam, bam to sorted bam, removal of duplicate readsBedtools - bedintersect,&amp;nbsp;Cuffmergepicard - removal of duplicate reads, merging sam filesdiffRepeats - quantify repeat element enrichment / differential analysis of repeat elements in the DNA, algning short reads to a database of repeat sequencesdiffReps - differential enrichment of a histone mark/transcription factormirdeep - de novo prediction of miRNA from RNA-seq datangsplot - can accept large files, runs with small memory footprintsphantompeek -chippeekanno -region_analysis -&amp;nbsp;GeneOverlap - used to find the overlap between 2 sets of genesIdentification of splicing events -&amp;nbsp;rMATS - exon skipping, intron retentionMISO - Mixture of isoforms, intron retention, skipped exon, mutually exclusive and alternative 3' UTR, splicing ratio b/w isoforms of same gene, splicing ratio between same isoform from 2 different conditions, uses bayesian theorem to iteratively infer splicing ratio. Allows to infer splicing ratios, both among isoforms of the same gene and between 2 conditions for the same isoform. Helps to identify contribution of histone/tf in regulation of AS.Peak calling -DANPOSMACSHomerQuantification of aligned reads -Cufflinks - Transcriptome abundance, de-novo transcriptome assembly, based on maximum likelihood principle, groups transcripts with the same transcription start siteStringTie - Transcriptome abundance, exon level quantificationSailfish - no need of aligner, direct quantificationDifferential expression analysis -&amp;nbsp;Cuffdiff - following cufflinks, generates high false positivesCuffdiff2 - generates high false positivesedgeR - Based on bayesian methods, negative binomial testingDEseq - Based on bayesian methods, local regression, generates high false negatives (highly conservative output)Limma -&amp;nbsp;Voom - models the mean variance relationship on log transformed read countshtseq countDifferential chip-seq analysis -diffReps - to compare differential enrichment of a histone mark/transcription factor b/w 2 conditions, takes into account biological variations between a group of samplesRemove batch effects from RNA-seq datasets -&amp;nbsp;ComBatBatchQCBioinformatics databases -repbase - documents repetitive DNA sequences across eukaryotic speciesmiRbase -piRNAbank -lncRNAdb-snornabase -SILVA -Rfam -NONCODE -fRNAdb -</summary></entry></feed>